{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","Chart","isDark","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","series","name","map","price","time_close","open","high","low","close","options","theme","mode","chart","type","height","width","toolbar","show","background","grid","yaxis","xaxis","axisBorder","axisTicks","labels","Loader","styled","span","DataList","div","DataItem","Price","useParams","tickersLoading","tickersData","quotes","USD","percent_change_24h","percent_change_7d","percent_change_30d","Title","h1","props","accentColor","Container","Header","header","Overview","boxColor","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Home","Coin","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","loading","Helmet","to","rank","symbol","toFixed","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","darkmode","bgColor","lightmode","Globalstyle","createGlobalStyle","Button","button","App","useState","setIsDark","onClick","current","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.e131b18a.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n    return fetch(`${BASE_URL}/coins`).then((response)=>response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n    return fetch(`${BASE_URL}/coins/${coinId}`).then((response)=>response.json());\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then((response)=>response.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n    const endDate = Math.floor(Date.now() / 1000);\r\n    const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n    return fetch(\r\n      `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n    ).then((response) => response.json());\r\n  }","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport Price from \"./Price\";\r\n\r\ninterface IHistorical {\r\n    time_open: string;\r\n    time_close: string;\r\n    open: number;\r\n    high: number;\r\n    low: number;\r\n    close: number;\r\n    volume: number;\r\n    market_cap: number;\r\n  }\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n  isDark: boolean;\r\n}\r\n\r\n\r\n\r\nfunction Chart({ isDark, coinId }: ChartProps) {\r\n    const { isLoading, data } = useQuery<IHistorical[]>(\r\n        [\"ohlcv\", coinId],\r\n        () => fetchCoinHistory(coinId),\r\n        {\r\n          refetchInterval: 10000,\r\n        }\r\n  );\r\n  // open high low close\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => ({'x': price.time_close, 'y':[price.open, price.high, price.low, price.close]})),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\": \"light\",//dark\r\n            },\r\n            chart: {\r\n              type: 'candlestick',\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n            },}}\r\n          type=\"candlestick\" height={350}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Chart;","import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinTickers } from \"../api\";\r\n\r\ninterface RouterParams {\r\n    coinId: string;\r\n}\r\n\r\n  interface PriceData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n      USD: {\r\n        ath_date: string;\r\n        ath_price: number;\r\n        market_cap: number;\r\n        market_cap_change_24h: number;\r\n        percent_change_1h: number;\r\n        percent_change_1y: number;\r\n        percent_change_6h: number;\r\n        percent_change_7d: number;\r\n        percent_change_12h: number;\r\n        percent_change_15m: number;\r\n        percent_change_24h: number;\r\n        percent_change_30d: number;\r\n        percent_change_30m: number;\r\n        percent_from_price_ath: number;\r\n        price: number;\r\n        volume_24h: number;\r\n        volume_24h_change_24h: number;\r\n      };\r\n    };\r\n  }\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst DataList = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:flex-start;\r\n`\r\n\r\nconst DataItem = styled.div`\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nfunction Price(){\r\n    const { coinId } = useParams<RouterParams>();\r\n    const {isLoading: tickersLoading , data: tickersData} = useQuery<PriceData>([\"tickers\",coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n    );\r\n    return(<div>{tickersLoading ? (<Loader>price loading...</Loader>) : (<DataList>\r\n        <DataItem>Percent change on 1day is  {tickersData?.quotes.USD.percent_change_24h}%</DataItem>\r\n        <DataItem>Percent change on 7days is  {tickersData?.quotes.USD.percent_change_7d}%</DataItem>\r\n        <DataItem>Percent change on 30days is  {tickersData?.quotes.USD.percent_change_30d}%</DataItem>\r\n        </DataList>) }</div>)\r\n}\r\nexport default Price","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useLocation,\r\n    useParams,\r\n    useRouteMatch,\r\n  } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${(props)=> props.theme.boxColor};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width:33%;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: ${(props)=> props.theme.boxColor};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    padding: 7px 0px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Home = styled.div`\r\n  display:flex;\r\n  margin-bottom:20px;\r\n  border: solid 2px ${(props)=> props.theme.textColor};\r\n  font-weight:bold;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n  width:60px;\r\n  padding : 8px 0px;\r\n  background-color: ${(props)=> props.theme.boxColor};\r\n`\r\n\r\n\r\ninterface RouterParams {\r\n    coinId: string;\r\n}\r\n\r\ninterface RouteState{\r\n    name:string;\r\n}\r\n\r\ninterface InfoData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n    description: string;\r\n    message: string;\r\n    open_source: boolean;\r\n    started_at: string;\r\n    development_status: string;\r\n    hardware_wallet: boolean;\r\n    proof_type: string;\r\n    org_structure: string;\r\n    hash_algorithm: string;\r\n    first_data_at: string;\r\n    last_data_at: string;\r\n  }\r\n  \r\n  interface PriceData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n      USD: {\r\n        ath_date: string;\r\n        ath_price: number;\r\n        market_cap: number;\r\n        market_cap_change_24h: number;\r\n        percent_change_1h: number;\r\n        percent_change_1y: number;\r\n        percent_change_6h: number;\r\n        percent_change_7d: number;\r\n        percent_change_12h: number;\r\n        percent_change_15m: number;\r\n        percent_change_24h: number;\r\n        percent_change_30d: number;\r\n        percent_change_30m: number;\r\n        percent_from_price_ath: number;\r\n        price: number;\r\n        volume_24h: number;\r\n        volume_24h_change_24h: number;\r\n      };\r\n    };\r\n  }\r\n\r\n  interface IDark {\r\n    isDark:boolean;\r\n  }\r\n\r\nfunction Coin({isDark}:IDark){\r\n    const { coinId } = useParams<RouterParams>();\r\n    const {state} = useLocation<RouteState>();\r\n    const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n    const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n\r\n    const {isLoading: infoLoading , data: infoData} = useQuery<InfoData>([\"info\",coinId],()=>fetchCoinInfo(coinId));\r\n    const {isLoading: tickersLoading , data: tickersData} = useQuery<PriceData>([\"tickers\",coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n    );\r\n    const loading = infoLoading || tickersLoading;\r\n    return (\r\n        <Container>\r\n            <Helmet>\r\n                <title>\r\n                {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n                </title>\r\n            </Helmet>\r\n            <Header>\r\n                <Title>\r\n                    {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n                </Title>\r\n            </Header>\r\n            {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Home>\r\n            <Link to={`/`}>Home</Link>\r\n          </Home>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n            <span>Price:</span>\r\n            <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n          <Route path={`/:coinId/price`}>\r\n              <Price />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart isDark={isDark} coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Coin;","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: black;\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size:48px;\r\n    color: ${(props)=>props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display:block;  \r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface Icoin{\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n}\r\n\r\n\r\n\r\nfunction Coins(){\r\n    const {isLoading, data} = useQuery<Icoin[]>(\"allcoins\",fetchCoins);\r\n    return (\r\n        <Container>\r\n            <Helmet>\r\n                <title>코인</title>\r\n            </Helmet>\r\n            <Header>\r\n                <Title>Coins</Title>\r\n            </Header>\r\n            {isLoading ? (\r\n                <Loader>Loading...</Loader>\r\n            ):(\r\n                <CoinsList>\r\n                    {data?.slice(0,100).map((coin)=>(<Coin key={coin.id}>\r\n                        <Link \r\n                            to={{pathname:`/${coin.id}`,\r\n                                state:{name:coin.name},\r\n                                }}>\r\n                                    <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}/>\r\n                                    {coin.name} &rarr;</Link>\r\n                    </Coin>))}\r\n                </CoinsList>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\nexport default Coins;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\ninterface IDark {\r\n    isDark:boolean;\r\n}\r\n\r\nfunction Router({isDark}:IDark){\r\n\r\n    return (\r\n        <BrowserRouter>\r\n         <Switch>\r\n          <Route path=\"/:coinId\">\r\n           <Coin isDark={isDark}/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n           <Coins/>\r\n          </Route>\r\n         </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkmode: DefaultTheme = {\r\n    bgColor: \"#2f3640\",\r\n    boxColor: \"#1d242e\",\r\n    textColor: \"#f5f6fa\",\r\n    accentColor: \"#9c88ff\",\r\n};\r\n\r\nexport const lightmode: DefaultTheme = {\r\n    bgColor: \"#e6eaf0\",\r\n    boxColor: \"#ffffff\",\r\n    textColor: \"#2b2c33\",\r\n    accentColor: \"#eb21a1\",\r\n};","import {createGlobalStyle} from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport styled,{ ThemeProvider } from \"styled-components\";\nimport { darkmode, lightmode } from \"./theme\";\nimport { useState } from \"react\";\n\nconst Globalstyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\nconst Button = styled.button`\n  display:flex;\n  margin-bottom:20px;\n  border: solid 2px ${(props)=> props.theme.textColor};\n  font-weight:bold;\n  color : ${(props)=> props.theme.textColor};\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  width:120px;\n  padding : 8px 0px;\n  background-color: ${(props)=> props.theme.boxColor};\n  &:hover {cursor:pointer;}\n`\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => setIsDark(current => !current);\n  return (\n    <>\n    <ThemeProvider theme={isDark ? darkmode : lightmode}>\n    <Globalstyle/>\n    <Button onClick={toggleDark}>{isDark ? 'light mode' : 'dark mode'}</Button>\n    <Router isDark={isDark}/>\n    </ThemeProvider>\n    <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}